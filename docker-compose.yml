version: "3.8"

services:

  employment_service:
    image: employment_service
    container_name: employment_service
    hostname: employment_service
    build:
      context: ./backend/
      dockerfile: Dockerfile
    restart: always
    environment:
      EMPLOYMENT_DB_HOST: employment_db
      EMPLOYMENT_DB_PORT: 27017
      EMPLOYMENT_SERVICE_PORT: 8000
    depends_on:
      - employment_db
    networks:
      - network
      
  aprcroso_service:
    image: aprcroso_service
    container_name: aprcroso_service
    build:
      context: ./aprcroso/
    ports:
      - "8005:8005"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/aprcrosodb?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
    depends_on:
      - mysql_db
    networks:
      - network  
      
  sso_service:
    image: sso_service
    container_name: sso_service
    build:
      context: ./SSO-main/SSO/
    ports:
      - "9090:9090"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/ssodb?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
    depends_on:
      - mysql_db
    networks:
      - network  
      
  school_service:
    image: school_service
    container_name: school_service
    build:
      context: ./school_service/project/backend/eschool/
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/eschooldb?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
    depends_on:
      - mysql_db
    networks:
      - network

  employment_db:
    image: mongo
    container_name: employment_db
    restart: on-failure
    networks:
      - network
      
  mysql_db:
    image: 'mysql:8.0'
    container_name: mysql_db
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_PASSWORD=root
      - MYSQL_USERNAME=root
    ports:
      - '3307:3306'
    restart: always
    networks:
      - network

  api_gateway:
    build:
      context: ./api_gateway/
      dockerfile: Dockerfile
    container_name: api_gateway
    hostname: api_gateway
    restart: on-failure
    ports:
      - 8000:8000
    depends_on:
      - employment_service
    networks:
      - network

networks:
  network:
    driver: bridge